# 30. 形態素解析結果の読み込み
# 形態素解析結果（neko.txt.mecab）を読み込むプログラムを実装せよ．
# ただし，各形態素は表層形（surface），基本形（base），品詞（pos），品詞細分類1（pos1）をキーとするマッピング型に格納し，
# 1文を形態素（マッピング型）のリストとして表現せよ．
# 第4章の残りの問題では，ここで作ったプログラムを活用せよ．

sentences = []

with open("./neko.txt.mecab", "r") as f:
    for line in f:
        l1 = line.split("\t")
        if len(l1) == 2:
            l2 = l1[1].split(",")
            if l2[0] != "記号":
                surface = l1[0]
                base = l2[6]
                pos = l2[0]
                pos1 = l2[1]
                sentences.append({"surface": surface, "base": base, "pos": pos, "pos1": pos1})

print(sentences)

# 31. 動詞
# 動詞の表層形をすべて抽出せよ.

for sentence in sentences:
    if sentence["pos"] == "動詞":
        print(sentence["surface"])

# 32. 動詞の基本形

for sentence in sentences:
    if sentence["pos"] == "動詞":
        print(sentence["base"])

# 33. 「AのB」
## 2つの名詞が「の」で連結されている名詞句を抽出せよ

for sentence in sentences:
    if sentence["pos"] == "名詞" and sentence["surface"] == "の":
        print(sentence["surface"])


